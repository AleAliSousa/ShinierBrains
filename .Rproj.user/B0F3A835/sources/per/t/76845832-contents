#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(shiny)
library(ggplot2)
library(caper)
library(dplyr)

# Load the data
MammalData <- read.csv("gyz043_suppl_Supplement_Data.csv")
MammalData$log_brain_mass_g <- log(MammalData$Mean_brain_mass_g)
MammalData$log_body_mass_g <- log(MammalData$Mean_body_mass_g)

# Load the tree
MammalTree <- read.tree("species.nwk")

# comparative data object
Mammals <- comparative.data(phy = MammalTree, data = MammalData, names.col = Binomial, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)

# Define the user interface
ui <- fluidPage(
  titlePanel("PGLS Brain Size Prediction"),
  sidebarLayout(
    sidebarPanel(
      sliderInput("body_size",
                  "Body Size (log g):",
                  min = min(MammalData$log(Mean_body_mass_g)),
                  max = max(MammalData$log(Mean_body_mass_g)),
                  value = mean(MammalData$log(Mean_body_mass_g)),
                  step = 0.01),
      actionButton("predict", "Predict Brain Size")
    ),
    mainPanel(
      plotOutput("plot"),
      verbatimTextOutput("result")
    )
  )
)

# Define the server logic
server <- function(input, output) {
  
  # Define the PGLS model
  model.pgls<-pgls(log(Mean_brain_mass_g) ~ log(Mean_body_mass_g), data = Mammals)
  
  # Generate the plot
  output$plot <- renderPlot({
    ggplot(MammalData, aes(x = log(Mean_body_mass_g), y = log(Mean_brain_mass_g))) +
      geom_point() +
      geom_smooth(method = "lm") +
      labs(x = "Body Size (log g)", y = "Brain Size (log g)")
  })
  
  # Predict the brain size based on the user's input
  predicted_brain <- eventReactive(input$predict, {
    new_data <- data.frame(log(Mean_body_mass_g) = input$body_size)
    exp(predict(model.pgls, newdata = new_data))
  })
  
  # Display the prediction result
  output$result <- renderText({
    paste("Based on a body size of", round(exp(input$body_size), 2), "g, the predicted brain size is", round(predicted_brain(), 2), "g.")
  })
  
}

# Run the app
shinyApp(ui = ui, server = server)

