filter(region == "A1" & layer == "L1")
# Create pie charts for each region-layer combination
plots <- filtered_data %>%
PD = meta_m1_layers %>% group_by(within_area_subclass, class) %>% summarise(n = sum(n))
plots <- filtered_data %>%
PD = meta_m1_layers %>% group_by(within_area_subclass, class) %>% summarise(n = sum(n))
filtered_data <- meta_m1_layers %>%
filter(region == "A1" & layer == "L1")
plots <- filtered_data %>%
PD = filtered_data %>% group_by(within_area_subclass, class) %>% summarise(n = sum(n))
PD = filtered_data %>% group_by(within_area_subclass, class) %>% summarise(n = sum(n))
PieDonut(PD, aes(within_area_subclass, class, count=n), title = "Titanic: Survival by Class")
PD = filtered_data %>% group_by(within_area_subclass, class) %>% summarise(n = sum(n))
PieDonut(PD, aes(class, within_area_subclass, count=n), title = "Titanic: Survival by Class")
# Filter data by region and layer
filtered_data <- meta_m1_layers %>%
filter(region == "A1" & layer == "L1")
# Create pie charts for each region-layer combination
PD = filtered_data %>% group_by(within_area_subclass, class) %>% summarise(n = sum(n))
p <- PieDonut(PD, aes(class, within_area_subclass, count=n), title = "Titanic: Survival by Class")
library(ggplot2)
library(webr)
library(dplyr)
# Define regions and layers
regions <- c("A1", "DLPFC", "M1", "MTG", "S1", "V1")
#, "ACC")
layers <- c("L1", "L2", "L3", "L5")
#, "L2_3", "L4", "L4ab", "L4c", "L5b", "L6", "L6a", "L6b", "WM")
# Loop over regions and layers
for (r in regions) {
for (l in layers) {
# Filter data by region and layer
filtered_data <- meta_m1_layers %>%
filter(region == r & layer == l)
# Filter data by region and layer
#filtered_data <- meta_m1_layers %>%
#filter(region == "A1" & layer == "L1")
# Create pie charts for each region-layer combination
PD = filtered_data %>% group_by(within_area_subclass, class) %>% summarise(n = sum(n))
p <- PieDonut(PD, aes(class, within_area_subclass, count=n), title = "region A1 layer L1")
}}
#plots <- filtered_data %>%
#ggplot(aes(x = "", y = n, fill = within_area_subclass)) +
#geom_bar(stat = "identity", width = 1) +
#coord_polar(theta = "y") +
#facet_grid(rows = vars(region), cols = vars(layer)) +
#scale_fill_discrete(name = "within_area_subclass") +
#theme_void() +
#theme(legend.position = "bottom") +
#coord_polar(theta="y")
# Show the plots
plots
library(ggplot2)
library(webr)
library(dplyr)
# Define regions and layers
regions <- c("A1", "DLPFC", "M1", "MTG", "S1", "V1")
#, "ACC")
layers <- c("L1", "L2", "L3", "L5")
#, "L2_3", "L4", "L4ab", "L4c", "L5b", "L6", "L6a", "L6b", "WM")
# Loop over regions and layers
for (r in regions) {
for (l in layers) {
# Filter data by region and layer
filtered_data <- meta_m1_layers %>%
filter(region == r & layer == l)
# Filter data by region and layer
#filtered_data <- meta_m1_layers %>%
#filter(region == "A1" & layer == "L1")
# Create pie charts for each region-layer combination
PD = filtered_data %>% group_by(within_area_subclass, class) #%>% summarise(n = sum(n))
p <- PieDonut(PD, aes(class, within_area_subclass, count=n), title = "region A1 layer L1")
}}
#plots <- filtered_data %>%
#ggplot(aes(x = "", y = n, fill = within_area_subclass)) +
#geom_bar(stat = "identity", width = 1) +
#coord_polar(theta = "y") +
#facet_grid(rows = vars(region), cols = vars(layer)) +
#scale_fill_discrete(name = "within_area_subclass") +
#theme_void() +
#theme(legend.position = "bottom") +
#coord_polar(theta="y")
# Show the plots
plots
library(ggplot2)
library(webr)
library(dplyr)
# Define regions and layers
regions <- c("A1", "DLPFC", "M1", "MTG", "S1", "V1")
#, "ACC")
layers <- c("L1", "L2", "L3", "L5")
#, "L2_3", "L4", "L4ab", "L4c", "L5b", "L6", "L6a", "L6b", "WM")
# Loop over regions and layers
for (r in regions) {
for (l in layers) {
# Filter data by region and layer
filtered_data <- meta_m1_layers %>%
filter(region == r & layer == l)
# Filter data by region and layer
#filtered_data <- meta_m1_layers %>%
#filter(region == "A1" & layer == "L1")
# Create pie charts for each region-layer combination
PD = filtered_data %>% group_by(within_area_subclass, class) #%>% summarise(n = sum(n))
p <- PieDonut(PD, aes(class, within_area_subclass, count=n), title = "region A1 layer L1")
}}
#plots <- filtered_data %>%
#ggplot(aes(x = "", y = n, fill = within_area_subclass)) +
#geom_bar(stat = "identity", width = 1) +
#coord_polar(theta = "y") +
#facet_grid(rows = vars(region), cols = vars(layer)) +
#scale_fill_discrete(name = "within_area_subclass") +
#theme_void() +
#theme(legend.position = "bottom") +
#coord_polar(theta="y")
p
for (l in layers) {
# Filter data by region and layer
filtered_data <- meta_m1_layers %>%
filter(region == r & layer == l)
# Filter data by region and layer
#filtered_data <- meta_m1_layers %>%
#filter(region == "A1" & layer == "L1")
# Create pie charts for each region-layer combination
PD = filtered_data %>% group_by(within_area_subclass, class) #%>% summarise(n = sum(n))
p <- PieDonut(PD, aes(class, within_area_subclass, count=n), title = paste("region", r, "layer", l))
}}
library(ggplot2)
library(webr)
library(dplyr)
# Define regions and layers
regions <- c("A1", "DLPFC", "M1", "MTG", "S1", "V1")
#, "ACC")
layers <- c("L1", "L2", "L3", "L5")
#, "L2_3", "L4", "L4ab", "L4c", "L5b", "L6", "L6a", "L6b", "WM")
# Loop over regions and layers
for (r in regions) {
for (l in layers) {
# Filter data by region and layer
filtered_data <- meta_m1_layers %>%
filter(region == r & layer == l)
# Filter data by region and layer
#filtered_data <- meta_m1_layers %>%
#filter(region == "A1" & layer == "L1")
# Create pie charts for each region-layer combination
PD = filtered_data %>% group_by(within_area_subclass, class) #%>% summarise(n = sum(n))
p <- PieDonut(PD, aes(class, within_area_subclass, count=n), title = paste("region", r, "layer", l))
}}
#plots <- filtered_data %>%
#ggplot(aes(x = "", y = n, fill = within_area_subclass)) +
#geom_bar(stat = "identity", width = 1) +
#coord_polar(theta = "y") +
#facet_grid(rows = vars(region), cols = vars(layer)) +
#scale_fill_discrete(name = "within_area_subclass") +
#theme_void() +
#theme(legend.position = "bottom") +
#coord_polar(theta="y")
p
library(ggplot2)
library(webr)
library(dplyr)
# Define regions and layers
regions <- c("A1", "DLPFC", "M1", "MTG", "S1", "V1", "ACC")
#, "ACC")
layers <- c("L1", "L2", "L3", "L5")
#, "L2_3", "L4", "L4ab", "L4c", "L5b", "L6", "L6a", "L6b", "WM")
# Loop over regions and layers
for (r in regions) {
for (l in layers) {
# Filter data by region and layer
filtered_data <- meta_m1_layers %>%
filter(region == r & layer == l)
# Filter data by region and layer
#filtered_data <- meta_m1_layers %>%
#filter(region == "A1" & layer == "L1")
# Create pie charts for each region-layer combination
PD = filtered_data %>% group_by(within_area_subclass, class) #%>% summarise(n = sum(n))
p <- PieDonut(PD, aes(class, within_area_subclass, count=n), title = paste("region", r, "layer", l))
}}
PieDonut(PD, aes(within_area_subclass, class, count=n), title = "Titanic: Survival by Class")
unique(meta_m1_layers$layer)
unique(meta_m1_layers$layer)
layers = c(unique(meta_m1_layers$layer))
layers
library(ggplot2)
library(webr)
library(dplyr)
# Define regions and layers
regions = c(unique(meta_m1_layers$regions))
#regions <- c("A1", "DLPFC", "M1", "MTG", "S1", "V1", "ACC")
#, "ACC")
layers = c(unique(meta_m1_layers$layer))
#layers <- c("L1", "L2", "L3", "L5")
#, "L2_3", "L4", "L4ab", "L4c", "L5b", "L6", "L6a", "L6b", "WM")
# Loop over regions and layers
for (r in regions) {
for (l in layers) {
# Filter data by region and layer
filtered_data <- meta_m1_layers %>%
filter(region == r & layer == l)
# Filter data by region and layer
#filtered_data <- meta_m1_layers %>%
#filter(region == "A1" & layer == "L1")
# Create pie charts for each region-layer combination
PD = filtered_data %>% group_by(within_area_subclass, class) #%>% summarise(n = sum(n))
p <- PieDonut(PD, aes(class, within_area_subclass, count=n), title = paste("region", r, "layer", l))
}}
#plots <- filtered_data %>%
#ggplot(aes(x = "", y = n, fill = within_area_subclass)) +
#geom_bar(stat = "identity", width = 1) +
#coord_polar(theta = "y") +
#facet_grid(rows = vars(region), cols = vars(layer)) +
#scale_fill_discrete(name = "within_area_subclass") +
#theme_void() +
#theme(legend.position = "bottom") +
#coord_polar(theta="y")
p
library(ggplot2)
library(webr)
library(dplyr)
# Define regions and layers
regions = c(unique(meta_m1_layers$region))
#regions <- c("A1", "DLPFC", "M1", "MTG", "S1", "V1", "ACC")
#, "ACC")
layers = c(unique(meta_m1_layers$layer))
#layers <- c("L1", "L2", "L3", "L5")
#, "L2_3", "L4", "L4ab", "L4c", "L5b", "L6", "L6a", "L6b", "WM")
# Loop over regions and layers
for (r in regions) {
for (l in layers) {
# Filter data by region and layer
filtered_data <- meta_m1_layers %>%
filter(region == r & layer == l)
# Filter data by region and layer
#filtered_data <- meta_m1_layers %>%
#filter(region == "A1" & layer == "L1")
# Create pie charts for each region-layer combination
PD = filtered_data %>% group_by(within_area_subclass, class) #%>% summarise(n = sum(n))
p <- PieDonut(PD, aes(class, within_area_subclass, count=n), title = paste("region", r, "layer", l))
}}
library(ggplot2)
library(webr)
library(dplyr)
# Define regions and layers
regions = c(array( unique(meta_m1_layers$region)))
#regions <- c("A1", "DLPFC", "M1", "MTG", "S1", "V1", "ACC")
#, "ACC")
layers = c(array (unique(meta_m1_layers$layer)))
#layers <- c("L1", "L2", "L3", "L5")
#, "L2_3", "L4", "L4ab", "L4c", "L5b", "L6", "L6a", "L6b", "WM")
# Loop over regions and layers
for (r in regions) {
for (l in layers) {
# Filter data by region and layer
filtered_data <- meta_m1_layers %>%
filter(region == r & layer == l)
# Filter data by region and layer
#filtered_data <- meta_m1_layers %>%
#filter(region == "A1" & layer == "L1")
# Create pie charts for each region-layer combination
PD = filtered_data %>% group_by(within_area_subclass, class) #%>% summarise(n = sum(n))
p <- PieDonut(PD, aes(class, within_area_subclass, count=n), title = paste("region", r, "layer", l))
}}
class(regions)
class(regions)
layers <- c("L1", "L2", "L3", "L5")
class (layers)
regions = c(array (unique(meta_m1_layers$region)))
#regions <- c("A1", "DLPFC", "M1", "MTG", "S1", "V1", "ACC")
#, "ACC")
layers = c(array (unique(meta_m1_layers$layer)))
regions
layers
library(ggplot2)
library(webr)
library(dplyr)
# Define regions and layers
regions = c(list (unique(meta_m1_layers$region)))
#regions <- c("A1", "DLPFC", "M1", "MTG", "S1", "V1", "ACC")
#, "ACC")
layers = c(list (unique(meta_m1_layers$layer)))
#layers <- c("L1", "L2", "L3", "L5")
#, "L2_3", "L4", "L4ab", "L4c", "L5b", "L6", "L6a", "L6b", "WM")
# Loop over regions and layers
for (r in regions) {
for (l in layers) {
# Filter data by region and layer
filtered_data <- meta_m1_layers %>%
filter(region == r & layer == l)
# Filter data by region and layer
#filtered_data <- meta_m1_layers %>%
#filter(region == "A1" & layer == "L1")
# Create pie charts for each region-layer combination
PD = filtered_data %>% group_by(within_area_subclass, class) #%>% summarise(n = sum(n))
p <- PieDonut(PD, aes(class, within_area_subclass, count=n), title = paste("region", r, "layer", l))
}}
regions
layers
layers[8:14]
layers[,8:14]
layers[[8:14]]
dim(layers)
library(ggplot2)
library(webr)
library(dplyr)
# Define regions and layers
regions = c(data.frame (unique(meta_m1_layers$region)))
#regions <- c("A1", "DLPFC", "M1", "MTG", "S1", "V1", "ACC")
#, "ACC")
layers = c(data.frame (unique(meta_m1_layers$layer)))
#layers <- c("L1", "L2", "L3", "L5")
#, "L2_3", "L4", "L4ab", "L4c", "L5b", "L6", "L6a", "L6b", "WM")
# Loop over regions and layers
for (r in regions) {
for (l in layers) {
# Filter data by region and layer
filtered_data <- meta_m1_layers %>%
filter(region == r & layer == l)
# Filter data by region and layer
#filtered_data <- meta_m1_layers %>%
#filter(region == "A1" & layer == "L1")
# Create pie charts for each region-layer combination
PD = filtered_data %>% group_by(within_area_subclass, class) #%>% summarise(n = sum(n))
p <- PieDonut(PD, aes(class, within_area_subclass, count=n), title = paste("region", r, "layer", l))
}}
layers
layers[8:14]
class(layers)
dim(layers)
regions = c(data.frame (unique(meta_m1_layers$region)))
#regions <- c("A1", "DLPFC", "M1", "MTG", "S1", "V1", "ACC")
#, "ACC")
layers = c(data.frame (unique(meta_m1_layers$layer)))
class(layers)
layers(-c(8:14))
layers[-c(8:14)]
layers[-c(,8:14)]
View(meta_m1_layers)
regions = as.data.frame(c (unique(meta_m1_layers$region)))
class(regions)
dim(regions)
library(ggplot2)
library(webr)
library(dplyr)
# Define regions and layers
regions = as.data.frame(c(unique(meta_m1_layers$region)))
#regions <- c("A1", "DLPFC", "M1", "MTG", "S1", "V1", "ACC")
#, "ACC")
layers = as.data.frame(c(unique(meta_m1_layers$layer)))
#layers <- c("L1", "L2", "L3", "L5")
#, "L2_3", "L4", "L4ab", "L4c", "L5b", "L6", "L6a", "L6b", "WM")
# Loop over regions and layers
for (r in regions) {
for (l in layers) {
# Filter data by region and layer
filtered_data <- meta_m1_layers %>%
filter(region == r & layer == l)
# Filter data by region and layer
#filtered_data <- meta_m1_layers %>%
#filter(region == "A1" & layer == "L1")
# Create pie charts for each region-layer combination
PD = filtered_data %>% group_by(within_area_subclass, class) #%>% summarise(n = sum(n))
p <- PieDonut(PD, aes(class, within_area_subclass, count=n), title = paste("region", r, "layer", l))
}}
layers[8:14]
layers[,8:14]
dim(layers)
layers[8:14,]
layers[8:14,]<-NULL
rm (layers[8:14,])
layers(-c[8:14,])
regions <- c("A1", "DLPFC", "M1", "MTG", "S1", "V1", "ACC")
layers <- c("L1", "L2", "L3", "L5")
# Loop over regions and layers
for (r in regions) {
for (l in layers) {
# Filter data by region and layer
filtered_data <- meta_m1_layers %>%
filter(region == r & layer == l)
# Filter data by region and layer
#filtered_data <- meta_m1_layers %>%
#filter(region == "A1" & layer == "L1")
# Create pie charts for each region-layer combination
PD = filtered_data %>% group_by(within_area_subclass, class) #%>% summarise(n = sum(n))
p <- PieDonut(PD, aes(class, within_area_subclass, count=n), title = paste("region", r, "layer", l))
}}
library(ggplot2)
library(webr)
library(dplyr)
# Define regions and layers
regions = (unique(meta_m1_layers$region))
#regions <- c("A1", "DLPFC", "M1", "MTG", "S1", "V1", "ACC")
#, "ACC")
layers = (unique(meta_m1_layers$layer))
#layers <- c("L1", "L2", "L3", "L5")
#, "L2_3", "L4", "L4ab", "L4c", "L5b", "L6", "L6a", "L6b", "WM")
# Loop over regions and layers
for (r in regions) {
for (l in layers) {
# Filter data by region and layer
filtered_data <- meta_m1_layers %>%
filter(region == r & layer == l)
# Filter data by region and layer
#filtered_data <- meta_m1_layers %>%
#filter(region == "A1" & layer == "L1")
# Create pie charts for each region-layer combination
PD = filtered_data %>% group_by(within_area_subclass, class) #%>% summarise(n = sum(n))
p <- PieDonut(PD, aes(class, within_area_subclass, count=n), title = paste("region", r, "layer", l))
}}
library(ggplot2)
library(webr)
library(dplyr)
# Define regions and layers
regions = (unique(meta_m1_layers$region))
#regions <- c("A1", "DLPFC", "M1", "MTG", "S1", "V1", "ACC")
#, "ACC")
layers = (unique(meta_m1_layers$layer))
#layers <- c("L1", "L2", "L3", "L5")
#, "L2_3", "L4", "L4ab", "L4c", "L5b", "L6", "L6a", "L6b", "WM")
# Loop over regions and layers
for (r in regions) {
for (l in layers) {
# Filter data by region and layer
filtered_data <- meta_m1_layers %>%
filter(region == r & layer == l, na.rm="FALSE")
# Filter data by region and layer
#filtered_data <- meta_m1_layers %>%
#filter(region == "A1" & layer == "L1")
# Create pie charts for each region-layer combination
PD = filtered_data %>% group_by(within_area_subclass, class) #%>% summarise(n = sum(n))
p <- PieDonut(PD, aes(class, within_area_subclass, count=n), title = paste("region", r, "layer", l))
}}
library(ggplot2)
library(webr)
library(dplyr)
# Define regions and layers
regions = (unique(meta_m1_layers$region))
#regions <- c("A1", "DLPFC", "M1", "MTG", "S1", "V1", "ACC")
#, "ACC")
layers = (unique(meta_m1_layers$layer))
#layers <- c("L1", "L2", "L3", "L5")
#, "L2_3", "L4", "L4ab", "L4c", "L5b", "L6", "L6a", "L6b", "WM")
# Loop over regions and layers
for (r in regions) {
for (l in layers) {
# Filter data by region and layer
filtered_data <- meta_m1_layers %>%
filter(region == r & layer == l, na.rm="TRUE")
# Filter data by region and layer
#filtered_data <- meta_m1_layers %>%
#filter(region == "A1" & layer == "L1")
# Create pie charts for each region-layer combination
PD = filtered_data %>% group_by(within_area_subclass, class) #%>% summarise(n = sum(n))
p <- PieDonut(PD, aes(class, within_area_subclass, count=n), title = paste("region", r, "layer", l))
}}
library(ggplot2)
library(webr)
library(dplyr)
# Define regions and layers
regions = (unique(meta_m1_layers$region))
#regions <- c("A1", "DLPFC", "M1", "MTG", "S1", "V1", "ACC")
#, "ACC")
layers = (unique(meta_m1_layers$layer))
#layers <- c("L1", "L2", "L3", "L5")
#, "L2_3", "L4", "L4ab", "L4c", "L5b", "L6", "L6a", "L6b", "WM")
# Loop over regions and layers
for (r in regions) {
for (l in layers) {
# Filter data by region and layer
filtered_data <- meta_m1_layers %>%
filter(region == r & layer == l)
filtered_data<- as.data.frame(filtered_data)
# Filter data by region and layer
#filtered_data <- meta_m1_layers %>%
#filter(region == "A1" & layer == "L1")
# Create pie charts for each region-layer combination
PD = filtered_data %>% group_by(within_area_subclass, class) #%>% summarise(n = sum(n))
p <- PieDonut(PD, aes(class, within_area_subclass, count=n), title = paste("region", r, "layer", l))
}}
install.packages('rsconnect')
rsconnect::setAccountInfo(name='3zqqmj-alexandra0allison-de0sousa',
token='5FAE5852F0E5968DCFE7284152521BA9',
secret='<SECRET>')
rsconnect::setAccountInfo(name='3zqqmj-alexandra0allison-de0sousa', token='5FAE5852F0E5968DCFE7284152521BA9', secret='5T8yDH5jQPbKOLG3OmL2A7r06IWTYYBickD8izVP')
library(rsconnect)
shiny::runApp('Library/CloudStorage/OneDrive-AllenInstitute/ShinierBrains')
runApp('Library/CloudStorage/OneDrive-AllenInstitute/ShinierBrains')
runApp('Library/CloudStorage/OneDrive-AllenInstitute/ShinierBrains')
runApp('Library/CloudStorage/OneDrive-AllenInstitute/ShinierBrains')
runApp('Library/CloudStorage/OneDrive-AllenInstitute/ShinierBrains')
runApp('Library/CloudStorage/OneDrive-AllenInstitute/ShinierBrains')
runApp('Library/CloudStorage/OneDrive-AllenInstitute/ShinierBrains')
runApp('Library/CloudStorage/OneDrive-AllenInstitute/ShinierBrains')
runApp('Library/CloudStorage/OneDrive-AllenInstitute/ShinierBrains')
runApp('Library/CloudStorage/OneDrive-AllenInstitute/ShinierBrains')
runApp('Library/CloudStorage/OneDrive-AllenInstitute/ShinierBrains')
runApp('Library/CloudStorage/OneDrive-AllenInstitute/ShinierBrains')
runApp('Library/CloudStorage/OneDrive-AllenInstitute/ShinierBrains')
runApp('Library/CloudStorage/OneDrive-AllenInstitute/ShinierBrains')
runApp('Library/CloudStorage/OneDrive-AllenInstitute/ShinierBrains')
runApp('Library/CloudStorage/OneDrive-AllenInstitute/ShinierBrains')
runApp('Library/CloudStorage/OneDrive-AllenInstitute/ShinierBrains')
runApp('Library/CloudStorage/OneDrive-AllenInstitute/ShinierBrains')
runApp('Library/CloudStorage/OneDrive-AllenInstitute/ShinierBrains')
runApp('Library/CloudStorage/OneDrive-AllenInstitute/ShinierBrains')
runApp('Library/CloudStorage/OneDrive-AllenInstitute/ShinierBrains')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
